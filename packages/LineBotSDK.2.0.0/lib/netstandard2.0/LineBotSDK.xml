<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LineBotSDK</name>
    </assembly>
    <members>
        <member name="T:isRock.LINE.Utility">
            <summary>
            basic utility about LINE restful API
            </summary>
        </member>
        <member name="M:isRock.LINE.Utility.LineHttpPost(System.String,System.Uri,System.String)">
            <summary>
             Line使用的標準 http post action ，回傳 JSON string
            </summary>
            <param name="JSON">傳入參數</param>
            <param name="Endpoint">Endpoint</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LINE.Utility.LineHttpPost``1(System.String,System.Uri,System.String)">
            <summary>
            Line使用的標準 http post action ，回傳 Deserialize 後的 Object
            </summary>
            <typeparam name="T">預期回傳型別</typeparam>
            <param name="JSON">傳入參數</param>
            <param name="Endpoint">Endpoint</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LINE.Utility.LineHttpGet(System.Uri,System.String)">
            <summary>
            Line使用的標準 http get action ，回傳 JSON string
            </summary>
            <param name="endpoint">endpoint</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LINE.Utility.LineHttpGetBytes(System.Uri,System.String)">
            <summary>
            透過http get下載bytes
            </summary>
            <param name="endpoint"></param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LINE.Utility.LineHttpGet``1(System.Uri,System.String)">
            <summary>
            Line使用的標準 http get action ，回傳 Deserialize 後的 Object
            </summary>
            <typeparam name="T"></typeparam>
            <param name="endpoint"></param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="T:isRock.LIFF.Utility">
            <summary>
            LIFF Utility
            </summary>
        </member>
        <member name="M:isRock.LIFF.Utility.AddLiffApp(System.String,System.Uri,isRock.LIFF.ViewType)">
            <summary>
            Add a new liff app
            </summary>
            <param name="ChannelAccessToken"></param>
            <param name="LiffAppUrl"></param>
            <param name="viewType"></param>
            <returns></returns>
        </member>
        <member name="T:isRock.LineBot.Bot">
            <summary>
            操作Line bot的類別實體
            </summary>
        </member>
        <member name="M:isRock.LineBot.Bot.#ctor(System.String)">
            <summary>
            建構函式
            </summary>
            <param name="ChannelAccessToken">請填入很長的ChannelAccessToken</param>
        </member>
        <member name="M:isRock.LineBot.Bot.ReplyMessage(System.String,System.String)">
            <summary>
            回覆訊息
            </summary>
            <param name="ReplyToken">ReplyToken</param>
            <param name="Message">要回覆的訊息</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.ReplyMessage(System.String,System.Int32,System.Int32)">
            <summary>
            回覆貼圖訊息
            </summary>
            <param name="ReplyToken">ReplyToken</param>
            <param name="packageId">貼圖套件id</param>
             <param name="stickerId">貼圖id</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.ReplyMessage(System.String,System.Uri)">
            <summary>
            回覆圖片訊息
            </summary>
            <param name="ReplyToken">ReplyToken</param>
            <param name="ContentUrl">圖片URL(必須是https)</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.ReplyMessage(System.String,System.Uri,System.Uri)">
            <summary>
            回覆圖片訊息
            </summary>
            <param name="ReplyToken">ReplyToken</param>
            <param name="originalContentUrl">原始圖片URL(必須是https)</param>
            <param name="previewImageUrl">預覽圖片URL(必須是https)</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.ReplyMessageWithJSON(System.String,System.String)">
            <summary>
            回覆訊息(以JSON格式描述訊息內容)
            </summary>
            <param name="ToUserID">用戶userId</param>
            <param name="JSONMessages">以JSON格式描述的訊息</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.PushMessage(System.String,isRock.LineBot.ImagemapMessage)">
            <summary>
            發送ImagemapMessage訊息
            </summary>
            <param name="ToUserID">發送對象(用戶userId，非line id)</param>
            <param name="Message">Imagemap訊息內容</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.PushMessage(System.String,isRock.LineBot.ButtonsTemplate)">
            <summary>
            發送ButtonTemplate訊息
            </summary>
            <param name="ToUserID">發送對象(用戶userId，非line id)</param>
            <param name="Message">[ButtonsTemplate訊息內容]</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.PushMessage(System.String,isRock.LineBot.ConfirmTemplate)">
            <summary>
            發送ConfirmTemplate訊息
            </summary>
            <param name="ToUserID">發送對象(用戶userId，非line id)</param>
            <param name="Message">[ConfirmTemplate訊息內容]</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.PushMessage(System.String,isRock.LineBot.CarouselTemplate)">
            <summary>
            發送CarouselTemplate訊息
            </summary>
            <param name="ToUserID">發送對象(用戶userId，非line id)</param>
            <param name="Message">[CarouselTemplate訊息內容]</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.PushMessage(System.String,isRock.LineBot.ImageCarouselTemplate)">
            <summary>
             發送ImageCarouselTemplate訊息 
            </summary>
            <param name="ToUserID">發送對象(用戶userId，非line id)</param>
            <param name="Message">[CarouselTemplate訊息內容]</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.PushMessage(System.String,System.String)">
            <summary>
            發送訊息
            </summary>
            <param name="ToUserID">發送對象(用戶userId，非line id)</param>
            <param name="TextMessage">[訊息內容]</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.PushMessage(System.String,System.Uri)">
            <summary>
            傳送圖片訊息
            </summary>
            <param name="ToUserID">用戶userId</param>
            <param name="ContentUrl">圖片URL(必須是https)</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.PushMessage(System.String,System.Uri,System.Uri)">
            <summary>
            傳送圖片訊息
            </summary>
            <param name="ToUserID">用戶userId</param>
            <param name="originalContentUrl">原始圖片位置(必須是https)</param>
            <param name="previewImageUrl">預覽圖片位置(必須是https)</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.PushMessage(System.String,System.Int32,System.Int32)">
            <summary>
            傳送貼圖訊息
            </summary>
            <param name="ToUserID">用戶userId</param>
            <param name="packageId">packageId</param>
            <param name="stickerId">stickerId</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.PushMulticast(System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.String})">
            <summary>
            一次傳遞訊息給多人(最多150人，最多五則訊息)
            </summary>
            <param name="ToUsers">User ID list</param>
            <param name="TextMessages">純文字訊息</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.ReplyMessage(System.String,isRock.LineBot.TextMessage)">
            <summary>
            回覆文字訊息
            </summary>
            <param name="ReplyToken">ReplyToken</param>
            <param name="TextMessage">文字訊息物件</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.ReplyMessage(System.String,System.Collections.Generic.List{isRock.LineBot.MessageBase})">
            <summary>
            回覆多則訊息
            </summary>
            <param name="ReplyToken">ReplyToken</param>
            <param name="Messages">不超過五則的訊息集合</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.ReplyMessage(System.String,isRock.LineBot.MessageBase)">
            <summary>
            回覆單則訊息
            </summary>
            <param name="ReplyToken">ReplyToken</param>
            <param name="Message">繼承自MessageBase的訊息</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.PushMessageWithJSON(System.String,System.String)">
            <summary>
            發送訊息(以JSON格式描述訊息內容)
            </summary>
            <param name="ToUserID">用戶userId</param>
            <param name="JSONMessages">以JSON格式描述的訊息</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.Leave(System.String)">
            <summary>
            離開Group或Room
            </summary>
            <param name="GroupId"></param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Bot.GetUserInfo(System.String)">
            <summary>
            取得用戶身分
            </summary>
            <param name="UserUid">不是Line Id，是很長的一串U00xx00xx00x000x0x0x0x0x0x0x這樣的id</param>
            <returns>LineUserInfo物件</returns>
        </member>
        <member name="M:isRock.LineBot.Bot.GetUserUploadedContent(System.String)">
            <summary>
            透過ContentID取得用戶上傳的檔案
            </summary>
            <param name="ContentID">Line檔案物件編號</param>
            <returns>bytes</returns>
        </member>
        <member name="T:isRock.LineBot.Utility">
            <summary>
            泛用靜態方法
            </summary>
        </member>
        <member name="M:isRock.LineBot.Utility.CreateRichMenu(isRock.LineBot.RichMenu.RichMenuItem,System.String)">
             <summary>
             建立RichMenu
             </summary>
             <param name="RichMenuItem">RichMenuItem物件</param>
             <param name="ChannelAccessToken">ChannelAccessToken</param>
             <returns>回傳richMenuIdResponse物件</returns>
             <example>
             <code language="cs">
            var token = "OSh/K1itQWSIptTkxjNlrjaqttvMeTgtcQ0RdjtRWf36QtIHO5o6uqM/+x+kNZxvMY1N2GS1Lr4ULZlc3Q3YSmDrAoZ6k3L6g7Ve8NpTpKbXV7gwBd5S4kbNuacJe5Yw5tGV4EBxKaM6R7XXEbB5rgdB04t89/1O/w1cDnyilFU=";
            isRock.LineBot.RichMenu.RichMenuItem item = new isRock.LineBot.RichMenu.RichMenuItem();
            item.chatBarText = "選單文字";
            item.name = "選單名稱";
            var area = new isRock.LineBot.RichMenu.Area();
            area.bounds.x = 0;
            area.bounds.y = 0;
            area.bounds.width = 2500;
            area.bounds.height = 1686;
            area.action = new isRock.LineBot.UriAction()
            { label = "Google", uri = new Uri("https://www.google.com") };
            item.areas.Add(area);
            
            var ret = isRock.LineBot.Utility.CreateRichMenu(
            item, new Uri("https://i.imgur.com/msB0XP6.png"), token);
             </code>
             </example>
        </member>
        <member name="M:isRock.LineBot.Utility.CreateRichMenu(isRock.LineBot.RichMenu.RichMenuItem,System.Byte[],System.String)">
            <summary>
            建立RichMenu並上傳圖片
            </summary>
            <param name="RichMenuItem">RichMenuItem物件</param>
            <param name="PNGImage">PNG格式的圖片binary data，必須是https，2500x1686 或 2500x843</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.CreateRichMenu(isRock.LineBot.RichMenu.RichMenuItem,System.Uri,System.String)">
            <summary>
            建立RichMenu並指定網路上的圖片
            </summary>
            <param name="RichMenuItem">RichMenuItem物件</param>
            <param name="PNGImageURL">PNG格式圖片的uri，必須是https，2500x1686 或 2500x843</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.UploadRichMenuImage(System.String,System.Byte[],System.String)">
            <summary>
            上傳圖片給特定的RichMenu
            </summary>
            <param name="richMenuId">RichMenu Id</param>
            <param name="PNGImage">PNG格式的圖片binary data，必須是https，2500x1686 或 2500x843</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
        </member>
        <member name="M:isRock.LineBot.Utility.DownloadRichMenuImage(System.String,System.String)">
            <summary>
            下載特定RichMenu的圖片
            </summary>
            <param name="richMenuId">RichMenu Id</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.GetRichMenuList(System.String)">
            <summary>
            取得特定Bot所擁有的RichMenu
            </summary>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.GetRichMenu(System.String,System.String)">
            <summary>
            取得特定RichMenu
            </summary>
            <param name="richMenuId">RichMenu Id</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.DeleteRichMenu(System.String,System.String)">
            <summary>
            刪除特定RichMenu
            </summary>
            <param name="richMenuId">RichMenu Id</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
        </member>
        <member name="M:isRock.LineBot.Utility.SetDefaultRichMenu(System.String,System.String)">
            <summary>
            設定預設RichMenu
            </summary>
            <param name="richMenuId">RichMenu Id</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
        </member>
        <member name="M:isRock.LineBot.Utility.GetDefaultRichMenuID(System.String)">
            <summary>
            取得預設RichMenu
            </summary>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.CancelDefaultRichMenu(System.String)">
            <summary>
            取消預設RichMenu
            </summary>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
        </member>
        <member name="M:isRock.LineBot.Utility.LinkRichMenuToUser(System.String,System.String,System.String)">
            <summary>
            指定特定用戶的RichMenu 
            </summary>
            <param name="richMenuId">RichMenu Id</param>
            <param name="userId">LINE User Id</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
        </member>
        <member name="M:isRock.LineBot.Utility.GetRichMenuIdOfUser(System.String,System.String)">
            <summary>
            取得特定用戶的RichMenu
            </summary>
            <param name="userId">LINE User Id</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.UnlinkRichMenuFromUser(System.String,System.String)">
            <summary>
            取消特定用戶的綁定RichMenu
            </summary>
            <param name="userId">LINE User Id</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
        </member>
        <member name="M:isRock.LineBot.Utility.GetGroupMemberProfile(System.String,System.String,System.String)">
            <summary>
            取得Group中特定Member的個人資訊
            </summary>
            <param name="groupId"></param>
            <param name="userId">LINE User Id</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.GetRoomMemberProfile(System.String,System.String,System.String)">
            <summary>
            取得Room中特定Member的個人資訊
            </summary>
            <param name="roomId"></param>
            <param name="userId">LINE User Id</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.LeaveGroup(System.String,System.String)">
            <summary>
            主動Leave group
            </summary>
            <param name="groupId">groupId</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.LeaveRoom(System.String,System.String)">
            <summary>
            主動Leave room
            </summary>
            <param name="roomId">roomId</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.GetUserUploadedContent(System.String,System.String)">
            <summary>
            透過ContentID取得用戶上傳的檔案
            </summary>
            <param name="ContentID"></param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.Parsing(System.String)">
            <summary>
            傳入RawData，解析出ReceievedMessage物件
            </summary>
            <param name="RawData"></param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.GetUserInfo(System.String,System.String)">
            <summary>
            傳入用戶UID, 取得用Profile
            </summary>
            <param name="uid">用戶UID,</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.PushMessagesWithJSON(System.String,System.String,System.String)">
            <summary>
            主動傳送ButtonsTemplate Message
            </summary>
            <param name="ToUserID">用戶UID(注意並非Line用戶id)</param>
            <param name="JSONMessages">JSON格式的訊息，參考LINE API Reference</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.PushMessage(System.String,System.String,System.String)">
            <summary>
            主動傳送Push文字訊息
            </summary>
            <param name="ToUserID">用戶UID(注意並非Line用戶id)</param>
            <param name="Message">要傳送的訊息</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.PushImageMessage(System.String,System.String,System.String,System.String)">
            <summary>
            主動傳送圖片訊息
            </summary>
            <param name="ToUserID">用戶UID(注意並非Line用戶id)</param>
            <param name="originalContentUrl">要傳送的訊息</param>
              /// <param name="previewImageUrl">要傳送的訊息</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.PushStickerMessage(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            主動傳送貼圖訊息
            </summary>
            <param name="ToUserID">用戶UID(注意並非Line用戶id)</param>
            <param name="packageId">packageId</param>
              /// <param name="stickerId">stickerId</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.PushTemplateMessage(System.String,isRock.LineBot.ButtonsTemplate,System.String)">
            <summary>
            主動傳送ButtonsTemplate Message
            </summary>
            <param name="ToUserID">用戶UID(注意並非Line用戶id)</param>
            <param name="packageId">packageId</param>
              /// <param name="stickerId">stickerId</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.PushTemplateMessage(System.String,isRock.LineBot.ConfirmTemplate,System.String)">
            <summary>
            主動傳送ConfirmTemplate Message
            </summary>
            <param name="ToUserID">用戶UID(注意並非Line用戶id)</param>
            <param name="packageId">packageId</param>
              /// <param name="stickerId">stickerId</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.PushTemplateMessage(System.String,isRock.LineBot.CarouselTemplate,System.String)">
            <summary>
            主動傳送CarouselTemplate Message
            </summary>
            <param name="ToUserID">用戶UID(注意並非Line用戶id)</param>
            <param name="TemplateMessage">TemplateMessage</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.PushTemplateMessage(System.String,isRock.LineBot.ImageCarouselTemplate,System.String)">
            <summary>
            主動傳送CarouselTemplate Message
            </summary>
            <param name="ToUserID">用戶UID(注意並非Line用戶id)</param>
            <param name="packageId">packageId</param>
              /// <param name="stickerId">stickerId</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.ReplyMessageWithJSON(System.String,System.String,System.String)">
            <summary>
            回覆訊息
            </summary>
            <param name="ReplyToken">ReplyToken</param>
            <param name="JSONMessages">JSON格式的訊息，參考LINE API Reference</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.ReplyMessage(System.String,System.String,System.String)">
            <summary>
            回覆訊息
            </summary>
            <param name="ReplyToken">ReplyToken</param>
            <param name="Message">訊息</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.ReplyStickerMessage(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            回覆貼圖訊息
            </summary>
            <param name="ReplyToken">ReplyToken</param>
            <param name="packageId">packageId</param>
              /// <param name="stickerId">stickerId</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.ReplyImageMessage(System.String,System.String,System.String,System.String)">
            <summary>
             回覆圖片訊息
            </summary>
            <param name="ToUserID">用戶UID(注意並非Line用戶id)</param>
            <param name="originalContentUrl">要傳送的訊息</param>
              /// <param name="previewImageUrl">要傳送的訊息</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.ReplyTemplateMessage(System.String,isRock.LineBot.ConfirmTemplate,System.String)">
            <summary>
            Reply ConfirmTemplate Message
            </summary>
            <param name="ReplyToken"></param>
            <param name="TemplateMessage"></param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.ReplyTemplateMessage(System.String,isRock.LineBot.ButtonsTemplate,System.String)">
            <summary>
            Reply ButtonsTemplate Message
            </summary>
            <param name="ReplyToken"></param>
            <param name="TemplateMessage"></param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.ReplyTemplateMessage(System.String,isRock.LineBot.ImageCarouselTemplate,System.String)">
            <summary>
            Reply ImageCarouselTemplate Message
            </summary>
            <param name="ReplyToken"></param>
            <param name="TemplateMessage"></param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.ReplyTemplateMessage(System.String,isRock.LineBot.CarouselTemplate,System.String)">
            <summary>
            Reply ImageCarouselTemplate Message
            </summary>
            <param name="ReplyToken"></param>
            <param name="TemplateMessage"></param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.IssueLinkToken(System.String,System.String)">
            <summary>
            Issue link token
            </summary>
            <param name="UserId">User ID for the LINE account to be linked. Found in the source object of account link event objects. Do not use the LINE ID used in LINE.</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
        </member>
        <member name="M:isRock.LineBot.Utility.IssueChannelAccessToken(System.String,System.String)">
            <summary>
            re-issue short-live Channel Access Token
            </summary>
            <param name="client_id"></param>
            <param name="client_secret"></param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineBot.Utility.RevokeChannelAccessToken(System.String)">
            <summary>
             Revoke  short-live Channel Access Token
            </summary>
            <param name="access_token"></param>
            <returns></returns>
        </member>
        <member name="T:isRock.LineBot.ShortLivedToken">
            <summary>
            定義Issue Short Lived Token回傳直
            </summary>
        </member>
        <member name="T:isRock.LineBot.MessageBase">
            <summary>
            新版Message的基底抽象類別
            </summary>
        </member>
        <member name="T:isRock.LineBot.TextMessage">
            <summary>
            純文字訊息
            </summary>
        </member>
        <member name="T:isRock.LineBot.StickerMessage">
            <summary>
            貼圖訊息
            </summary>
        </member>
        <member name="T:isRock.LineBot.ImageMessage">
            <summary>
            圖片訊息
            </summary>
        </member>
        <member name="M:isRock.LineBot.ImageMessage.#ctor(System.Uri,System.Uri)">
            <summary>
            Image Message
            </summary>
            <param name="originalContentUrl"> 	Image URL (Max: 1000 characters)</param>
            <param name="previewImageUrl">Preview image URL (Max: 1000 characters)</param>
        </member>
        <member name="M:isRock.LineBot.VideoMessage.#ctor(System.Uri,System.Uri)">
            <summary>
            Video message
            </summary>
            <param name="originalContentUrl">URL of video file (Max: 1000 characters)</param>
            <param name="previewImageUrl">URL of preview image (Max: 1000 characters)</param>
        </member>
        <member name="P:isRock.LineBot.AudioMessage.duration">
            <summary>
            Length of audio file (milliseconds)
            </summary>
        </member>
        <member name="M:isRock.LineBot.AudioMessage.#ctor(System.Uri,System.Int32)">
            <summary>
            Audio Message
            </summary>
            <param name="originalContentUrl">URL of audio file (Max: 1000 characters)</param>
            <param name="duration">Length of audio file (milliseconds)</param>
        </member>
        <member name="T:isRock.LineBot.MulticastMessage">
            <summary>
            multicast 使用的Message物件
            </summary>
        </member>
        <member name="P:isRock.LineBot.MulticastMessage.type">
            <summary>
            類型(text)
            </summary>
        </member>
        <member name="P:isRock.LineBot.MulticastMessage.text">
            <summary>
            文字
            </summary>
        </member>
        <member name="T:isRock.LineBot.Column">
            <summary>
            CarouselTemplate中的一組，稱為Column
            </summary>
        </member>
        <member name="T:isRock.LineBot.ImageCarouselColumn">
             <summary>
            ImageCarouselTemplate中的一組，稱為Column
             </summary>
        </member>
        <member name="T:isRock.LineBot.PostbackAction">
            <summary>
            PostbackAction
            </summary>
        </member>
        <member name="T:isRock.LineBot.MessageAction">
            <summary>
            MessageAction
            </summary>
        </member>
        <member name="T:isRock.LineBot.UriAction">
            <summary>
            UriAction
            </summary>
        </member>
        <member name="T:isRock.LineBot.SourceUser">
            <summary>
            SourceUser
            配合 https://developers.line.biz/en/news/2018/11/15/ 更新
            </summary>
        </member>
        <member name="T:isRock.LineBot.Message">
            <summary>
            定義接收來的訊息(JSON反序列化用)
            </summary>
        </member>
        <member name="P:isRock.LineBot.Event.left">
            <summary>
             object for when a user joins a group or room that the bot is in
            </summary>
        </member>
        <member name="P:isRock.LineBot.Event.joined">
            <summary>
             object for when a user joins a group or room that the bot is in
            </summary>
        </member>
        <member name="T:isRock.LineBot.Members">
            <summary>
            left.members和joined.members用
            </summary>
        </member>
        <member name="T:isRock.LineLoginV21.GetTokenFromCodeResult">
            <summary>
            呼叫GetTokenFromCode後的回傳結果
            </summary>
        </member>
        <member name="T:isRock.LineLoginV21.Profile">
            <summary>
            呼叫GetUserProfile後的回傳結果
            </summary>
        </member>
        <member name="T:isRock.LineLoginV21.Utility">
            <summary>
            靜態方法工具
            </summary>
        </member>
        <member name="M:isRock.LineLoginV21.Utility.GetFriendshipStatus(System.String)">
            <summary>
            Gets the friendship status of the user and the bot linked to your LINE Login channel.
            Note: Requires an access token with the profile scope.For more information, see Making an authorization request and Scopes.
            Note: You must have a bot linked with your channel.For more information, see Linking a bot with your LINE Login channel.
            </summary>
            <param name="access_token"></param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineLoginV21.Utility.GetTokenFromCode(System.String,System.String,System.String,System.String)">
            <summary>
            從code取得Notify Token (Issue access token)
            </summary>
            <param name="code"></param>
            <param name="ClientId"></param>
            <param name="ClientSecret"></param>
            <param name="redirect_uri"></param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineLoginV21.Utility.GetUserProfile(System.String)">
            <summary>
            傳入access_token, 取得用Profile
            </summary>
            <param name="access_token"></param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineLoginV1.Utility.GetToeknFromCode(System.String,System.String,System.String,System.String)">
            <summary>
            從code取得Notify Token
            </summary>
            <param name="code"></param>
            <param name="ClientId"></param>
            <param name="ClientSecret"></param>
            <param name="redirect_uri"></param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineLoginV1.Utility.GetUserProfile(System.String)">
            <summary>
            傳入用戶UID, 取得用Profile
            </summary>
            <param name="uid">用戶UID,</param>
            <param name="ChannelAccessToken">ChannelAccessToken</param>
            <returns></returns>
        </member>
        <member name="T:isRock.LineNotify.Utility">
            <summary>
            LineNotify相關的Urility
            </summary>
        </member>
        <member name="M:isRock.LineNotify.Utility.GetStatus(System.String)">
            <summary>
            取得token狀態
            </summary>
            <param name="access_token"></param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineNotify.Utility.GetTokenFromCode(System.String,System.String,System.String,System.String)">
            <summary>
            從code取得Notify Token
            </summary>
            <param name="code"></param>
            <param name="ClientId"></param>
            <param name="ClientSecret"></param>
            <param name="redirect_uri"></param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineNotify.Utility.SendNotify(System.String,System.String,System.Uri,System.Uri,System.Int32,System.Int32)">
            <summary>
            以LineNotify Token發送訊息給特定User
            </summary>
            <param name="NotifyToken"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="M:isRock.LineNotify.Utility.SendNotify(System.String,System.String)">
            <summary>
            以LineNotify Token發送訊息給特定User
            </summary>
            <param name="NotifyToken"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
    </members>
</doc>
